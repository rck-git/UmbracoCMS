@using Umbraco.Cms.Core.Models;
@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage


@{
    
    // Since the Image Model generated by Modelsbuilder is a compatible type to IPublishedContent we can use the 'as' operator to convert it into the ModelsBuilder Umbraco.Cms.Web.Common.PublishedModels.Image class
    
    var bgOddSquare = Umbraco.Media(Guid.Parse("02a70622-1a2c-47eb-891f-8acb3bedd951")); 
    var guy = Umbraco.Media(Guid.Parse("55daff44-4a6b-405c-93a2-9ec94c7dbc95"));
    var dot = Umbraco.Media(Guid.Parse("2ce54bc9-3294-42c5-b6ec-879bd57edc9f"));

     
}

<div class="smilingContainer">
    <div class="happyGuy">
       @if (bgOddSquare != null)
        {
            // To get the URL for your media item, you use the Url method:
            var url = bgOddSquare.Url();
            <img src="@url" alt="@bgOddSquare.Name" id="bgOddSquare" />
        }
        @if (dot != null)
        {
            // To get the URL for your media item, you use the Url method:
            var url = dot.Url();
            <img src="@url" alt="@dot.Name" id="dot" />
        }

        @if (guy != null)
        {
            // To get the URL for your media item, you use the Url method:
            var url = guy.Url();
            <img src="@url" alt="@guy.Name" id="guy" />
        }
    </div>
       <div class="contactInfo"
        <h3>
            Let us know about your next project
        </h3>
        <p>
            @Model.Value("companyAddress", fallback: Fallback.ToAncestors)
        </p>
         <p>
            @Model.Value("companyPhoneNumber", fallback: Fallback.ToAncestors)
        </p>
        <p>
            @Model.Value("companyEmailAddress", fallback: Fallback.ToAncestors)
        </p>
    </div>
</div>